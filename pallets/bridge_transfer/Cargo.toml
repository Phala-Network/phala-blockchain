[package]
authors = ["Phala Network"]
edition = "2018"
name = "pallet-bridge-transfer"
version = "0.0.1"
license = "Apache 2.0"
homepage = "https://phala.network/"
repository = "https://github.com/Phala-Network/phala-blockchain"

[dependencies]
# third-party dependencies
codec = { package = "parity-scale-codec", version = "3.0", default-features = false, features = ["derive"] }
scale-info = { version = "2.0", default-features = false, features = ["derive"] }

# primitives
sp-std = { default-features = false, path = "../../substrate/primitives/std" }
sp-runtime = { default-features = false, path = "../../substrate/primitives/runtime" }
sp-io = { default-features = false, path = "../../substrate/primitives/io" }
sp-core = { default-features = false, path = "../../substrate/primitives/core" }
sp-arithmetic = { default-features = false, path = "../../substrate/primitives/arithmetic" }

# frame dependencies
frame-support = { default-features = false, path = "../../substrate/frame/support" }
frame-system = { default-features = false, path = "../../substrate/frame/system" }
frame-benchmarking = { default-features = false, path = "../../substrate/frame/benchmarking", optional = true }

phala-types = { path = "../../crates/phala-types", default-features = false }
phala-pallets = { path = "../phala", default-features = false }
pallet-bridge = { path = "../bridge", default-features = false }
hex = { version = "0.4", default-features = false }

[dev-dependencies]
hex-literal = "0.3"
pallet-balances = { default-features = false, path = "../../substrate/frame/balances" }
pallet-timestamp = { path = "../../substrate/frame/timestamp" }

[features]
default = ["std"]
runtime-benchmarks = [
	"frame-benchmarking/runtime-benchmarks",
	"frame-support/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
]
std = [
	"codec/std",
	"scale-info/std",
	"sp-std/std",
	"sp-runtime/std",
	"sp-io/std",
	"sp-core/std",
	"sp-arithmetic/std",
	"frame-support/std",
	"frame-system/std",
	"frame-benchmarking/std",
	"pallet-bridge/std",
	"phala-pallets/std",
]
