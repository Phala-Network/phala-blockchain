[package]
name = "EnclaveApp"
version = "0.0.1"
authors = ["jasl"]
edition = "2018"
resolver = "2"

[lib]
name = "enclaveapp"
crate-type = ["staticlib"]

[features]
default = ["net"]
net = []

[dependencies]
libc        = "0.2.98"
log         = "0.4.14"
env_logger  = { version = "0.9.0", default-features = false, features = ["termcolor"] }
base64      = "0.13.0"
rand        = "0.7.3"
hex         = "0.4"
anyhow      = "1.0"
blake2-rfc  = "0.2.18"
lazy_static = { version = "1.4.0", default-features = false, features = ["spin_no_std"] }
parity-scale-codec = { version = "3.0", default-features = false }

phactory = { path = "../../../crates/phactory" }
phactory-pal = { path = "../../../crates/phactory/pal" }
phactory-api = { path = "../../../crates/phactory/api" }
phala-async-executor = { path = "../../../crates/phala-async-executor", features = ['no-thread'] }
phala-allocator = { path = "../../../crates/phala-allocator" }

http_req    = { version = "0.8.1", default-features = false, features = ["rust-tls"]}

serde = { version = "1.0", default-features = false, features = ["derive"] }

# to patch them to work in sgx
ppv-lite86 = { version = "0.2", default-features = false, features = ["phala-sgx"] }
aho-corasick = { version = "0.7.18", default-features = false, features = ["phala-sgx"] }
parking_lot_core = { version = "0.8.5", default-features = false, features = ["phala-sgx"] }
parking_lot_core_0_9_1 = { version = "0.9.1", package = "parking_lot_core", default-features = false, features = ["phala-sgx"] }
cpufeatures = { version = "0.2", default-features = false, features = ["phala-sgx"] }
async-io = { version = "1.6", default-features = false, features = ["phala-sgx"] }
parking = { version = "2.0", default-features = false, features = ["phala-sgx"] }
httparse = { version = "1.5.1", default-features = false, features = ["phala-sgx"] }
futures-executor = { version = "0.3.17", default-features = false, features = ["phala-sgx"] }
event-listener = { version = "2.5.1", default-features = false, features = ["phala-sgx"] }

once_cell = { version = "1.8.0", default-features = false, features = ["parking_lot"] }

[target.'cfg(not(target_env = "sgx"))'.dependencies]
sgx_types       = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tcrypto     = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tse         = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_trts        = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tseal       = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tprotected_fs = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_libc        = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_unwind      = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git" }
sgx_tstd        = { rev = "v1.1.4", git = "https://github.com/apache/teaclave-sgx-sdk.git", default-features = false, features = ["stdio"] }

[patch.crates-io]
ppv-lite86 = { git = "https://github.com/Phala-Network/cryptocorrosion-sgx.git", branch = "phala" }
ring = { git = "https://github.com/Phala-Network/ring-sgx.git", branch = "phala" }
async-io = { git = "https://github.com/Phala-Network/async-io-sgx.git", branch = "phala" }
parking = { git = "https://github.com/Phala-Network/parking-sgx.git", branch = "phala" }
httparse = { git = "https://github.com/Phala-Network/httparse-sgx.git", branch = "phala" }
aho-corasick = { git = "https://github.com/Phala-Network/aho-corasick-sgx.git", branch = "phala" }
futures-executor = { git = "https://github.com/Phala-Network/futures-rs-sgx.git", branch = "phala-0.3.21" }
event-listener = { git = "https://github.com/Phala-Network/event-listener-sgx.git", branch = "phala" }
parking_lot_core = { git = "https://github.com/Phala-Network/parking_lot-sgx.git", branch = "phala" }
parking_lot_core_0_9_1 = { git = "https://github.com/Phala-Network/parking_lot-sgx.git", branch = "phala-0.9.1", package = "parking_lot_core" }
cpufeatures = { git = "https://github.com/Phala-Network/cpufeatures-sgx.git", branch = "phala" }

[patch.'https://github.com/apache/teaclave-sgx-sdk.git']
# sgx_alloc = { path = "../../../teaclave-sgx-sdk/sgx_alloc" }
# sgx_backtrace = { path = "../../../teaclave-sgx-sdk/sgx_backtrace" }
# sgx_backtrace_sys = { path = "../../../teaclave-sgx-sdk/sgx_backtrace_sys" }
# sgx_build_helper = { path = "../../../teaclave-sgx-sdk/sgx_build_helper" }
# sgx_cov = { path = "../../../teaclave-sgx-sdk/sgx_cov" }
# sgx_crypto_helper = { path = "../../../teaclave-sgx-sdk/sgx_crypto_helper" }
# sgx_demangle = { path = "../../../teaclave-sgx-sdk/sgx_demangle" }
sgx_libc = { path = "../../../teaclave-sgx-sdk/sgx_libc" }
# sgx_rand = { path = "../../../teaclave-sgx-sdk/sgx_rand" }
# sgx_rand_derive = { path = "../../../teaclave-sgx-sdk/sgx_rand_derive" }
# sgx_serialize = { path = "../../../teaclave-sgx-sdk/sgx_serialize" }
# sgx_serialize_derive = { path = "../../../teaclave-sgx-sdk/sgx_serialize_derive" }
# sgx_serialize_derive_internals = { path = "../../../teaclave-sgx-sdk/sgx_serialize_derive_internals" }
sgx_tcrypto = { path = "../../../teaclave-sgx-sdk/sgx_tcrypto" }
# sgx_tcrypto_helper = { path = "../../../teaclave-sgx-sdksgx_tcrypto_helper" }
# sgx_tdh = { path = "../../../teaclave-sgx-sdk/sgx_tdh" }
# sgx_tkey_exchange = { path = "../../../teaclave-sgx-sdk/sgx_tkey_exchange" }
sgx_tprotected_fs = { path = "../../../teaclave-sgx-sdk/sgx_tprotected_fs" }
sgx_trts = { path = "../../../teaclave-sgx-sdk/sgx_trts" }
sgx_tse = { path = "../../../teaclave-sgx-sdk/sgx_tse" }
sgx_tseal = { path = "../../../teaclave-sgx-sdk/sgx_tseal" }
sgx_tstd = { path = "../../../teaclave-sgx-sdk/sgx_tstd" }
# sgx_tunittest = { path = "../../../teaclave-sgx-sdk/sgx_tunittest" }
sgx_types = { path = "../../../teaclave-sgx-sdk/sgx_types" }
# sgx_ucrypto = { path = "../../../teaclave-sgx-sdk/sgx_ucrypto" }
sgx_unwind = { path = "../../../teaclave-sgx-sdk/sgx_unwind" }
# sgx_urts = { path = "../../../teaclave-sgx-sdk/sgx_urts" }
